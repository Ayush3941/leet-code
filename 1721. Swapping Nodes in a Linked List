# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def swapNodes(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        alpha = head
        a=0
        size=1
        while True:
            if alpha.next == None:
                break
            alpha=alpha.next
            a=alpha.val
            size+=1
        alpha=head
        for i in range(1,size+1):
            if i==k:
                b1=alpha.val
            if i==size+1-k:
                b2=alpha.val
            alpha=alpha.next
            
        alpha=head
        head = alpha
        for i in range(1,size+1):
            if i==k:
                alpha.val=b2
            if i==size+1-k:
                alpha.val=b1
            alpha=alpha.next

        return(head)
